guiInitializationInterrupted = The creation of the GUI was interrupted. Try to re-run the application (eg. reload the webpage).
guiInitializationException = An error occured during initialization of the GUI.
dieWithException = The application encountered an unrecoverable error. \n \
Details of the error: \n \
{0} \n \
Description of the exception: \n \
{1}
dieWithExceptionTitle = Unrecoverable error encountered
unknownError = An unknown error.
modelLazyLoadException = The loading of the model failed because of the following exception.
listingAddOrigamiInvalidOrigamiSource = The source URL of the model isn't a valid URI, not adding to listing.xml.
exception.UnsupportedDataFormatException.loadModel = The model being loaded has invalid format and cannot be loaded.
exception.IOException.loadModel = Read error occured while loading the model. 

buttons.ok = OK
buttons.cancel = Cancel
buttons.apply = Apply
buttons.yes = Yes
buttons.no = No 

units.MM = milimeters
units.MM.mark = mm
units.MM.format = {0,number} mm
units.CM = centimeters
units.CM.mark = cm
units.CM.format = {0,number} cm
units.M = meters
units.M.mark = m
units.M.format = {0,number} m
units.KM = kilometers
units.KM.mark = km
units.KM.format = {0,number} km
units.INCH = inches
units.INCH.mark = \u2032
units.INCH.format = {0,number}\u2032
units.FOOT = feet
units.FOOT.mark = \u2033
units.FOOT.format = {0,number}\u2033
units.MILE = miles
units.MILE.mark = mi
#you may use ChoiceFormat to properly format the unit string 
units.MILE.format = {0,number} {0,choice,-\u221E#miles | -1#mile | 0#miles | 0<mile | 1<miles} 
units.REL = relative
units.REL.mark = %

unitDimension.format = {0} x {1}
#you can define the look of the formatted dimension for every unit
!unitDimesion.format.MM = {0} x {1} in milimeters 

#MENU ITEMS

#if you set .accelerator for a menu.* item and don't set .mnemonic for it, the keyCode of the accelerator will be 
#automatically used as the mnemonic
menu.save = Save...
menu.save.accelerator = control S
menu.save.tooltip = Save the displayed model in various formats

menu.save.asXML = as XML
menu.save.asXML.accelerator = control shift X
menu.save.asXML.tooltip = The default format used by the Origami applications.

menu.save.asPDF = as PDF
menu.save.asPDF.accelerator = control shift P
menu.save.asPDF.tooltip = Export the diagram to a PDF document.

menu.save.asSVG = as SVG
menu.save.asSVG.accelerator = control shift V
menu.save.asSVG.tooltip = Export the diagram to a SVG vector graphics file.

menu.save.asPNG = as PNG
menu.save.asPNG.accelerator = control shift G
menu.save.asPNG.tooltip = Export the diagram to a PNG image.

menu.save.listing = Export list
menu.save.listing.accelerator = control shift L
#Yes, you can provide HTML for the tooltip! Just don't forget to enclose the tooltip in <html></html> then.
menu.save.listing.tooltip = <html>Save the whole list of diagrams and categories as an XML<br> file that can be \
loaded again in the Origami viewer.</html>

menu.display.diagram = Diagram view
menu.display.diagram.accelerator = control D
menu.display.diagram.tooltip = Display only one step of the diagram in the viewer. 

menu.display.page = Page view
menu.display.page.accelerator = control P
menu.display.page.tooltip = Display more than one step of the diagram in the viewer.

menu.zoom.in = Zoom in
#.hideText tells the GUI not to display the text in the menu (but provide it eg. in tooltips etc.)
menu.zoom.in.hideText = true
menu.zoom.in.accelerator = control PLUS
menu.zoom.in.tooltip = Zoom in the displayed steps.

menu.zoom.out = Zoom out
menu.zoom.out.hideText = true
menu.zoom.out.accelerator = control MINUS
menu.zoom.out.tooltip = Zoom out the displayed steps.

menu.prevDiagram = Previous diagram
menu.prevDiagram.hideText = true
menu.prevDiagram.accelerator = control PAGE_DOWN
menu.prevDiagram.tooltip = Show the previous diagram.

menu.nextDiagram = Next diagram
menu.nextDiagram.hideText = true
menu.nextDiagram.accelerator = control PAGE_UP
menu.nextDiagram.tooltip = Show the next diagram.

menu.settings = Settings
menu.settings.mnemonic = T
menu.settings.accelerator = control O
menu.settings.tooltip = Display the configuration dialog.

menu.separator.editable = Further editable formats
menu.separator.non-editable = Non-editable formats
menu.separator.listing = List of loaded diagrams

#The label of a keyboard shortcut in a tooltip
accelerator = Shortcut

#KEY TRANSLATIONS
#Here you may change the names for modifiers/keys displayed in tooltips. Available modifiers are key.Ctrl, key.Meta,
#key.Alt, key.AltGr, key.Shift . Available "regular" keys are the values after VK_ in KeyEvent constants. Be sure to
#preserve the case of the letters!
#You may append a .osName after the key, which means that if the first word in the "os.name" system property is the one
#appended to the key, the entry with the OS name appended will be used instead of the general no-OS (or all-OS, depends
#on your side of look) version. 
key.Meta = Win
key.Meta.Mac = Cmd
key.Meta.SunOS = Meta
key.Meta.Solaris = Meta

key.Alt.Mac = Opt/Alt

#yes, you can use HTML entities in the key descriptions
key.LEFT = Left arrow (&larr;)
key.RIGHT = Right arrow (&rarr;)

!key.PAGE_DOWN = PgDown
!key.PAGE_UP = PgUp

#Here you can add CSS code to the displayed tooltips. It will be appended in the head/style tag after the default style
#definitions.
!tooltip.additionalCSS

DiagramRenderer.loading = Loading data...

DiagramRenderer.prev.page = Previous page
DiagramRenderer.prev.page.tooltip = Show the previous page of the model.
DiagramRenderer.prev.page.hideText = true
DiagramRenderer.prev.page.accelerator = control LEFT
DiagramRenderer.prev.page.mnemonic = R

DiagramRenderer.next.page = Next page
DiagramRenderer.next.page.tooltip = Show the next page of the model.
DiagramRenderer.next.page.hideText = true
DiagramRenderer.next.page.accelerator = control RIGHT
DiagramRenderer.next.page.mnemonic = N

DiagramRenderer.prev.diagram = Previous step
DiagramRenderer.prev.diagram.tooltip = Show the previous step of the model.
DiagramRenderer.prev.diagram.hideText = true
DiagramRenderer.prev.diagram.accelerator = control LEFT 
DiagramRenderer.prev.diagram.mnemonic = R

DiagramRenderer.next.diagram = Next step
DiagramRenderer.next.diagram.tooltip = Show the next step of the model.
DiagramRenderer.next.diagram.hideText = true
DiagramRenderer.next.diagram.accelerator = control RIGHT
DiagramRenderer.next.diagram.mnemonic = N

DiagramRenderer.first.page = First page
DiagramRenderer.first.page.tooltip = Show the first page of the model.
DiagramRenderer.first.page.hideText = true
DiagramRenderer.first.page.accelerator = control HOME
DiagramRenderer.first.page.mnemonic = F

DiagramRenderer.last.page = Last page
DiagramRenderer.last.page.tooltip = Show the last page of the model.
DiagramRenderer.last.page.hideText = true
DiagramRenderer.last.page.accelerator = control END
DiagramRenderer.last.page.mnemonic = L

DiagramRenderer.first.diagram = First step
DiagramRenderer.first.diagram.tooltip = Show the first step of the model.
DiagramRenderer.first.diagram.hideText = true
DiagramRenderer.first.diagram.accelerator = control HOME
DiagramRenderer.first.diagram.mnemonic = F

DiagramRenderer.last.diagram = Last step
DiagramRenderer.last.diagram.tooltip = Show the last step of the model.
DiagramRenderer.last.diagram.hideText = true
DiagramRenderer.last.diagram.accelerator = control END
DiagramRenderer.last.diagram.mnemonic = L

DiagramRenderer.stepXofY = Step {0} of {1}
DiagramRenderer.pageXofY = Page {0} of {1}

StepRenderer.zoom.in = Zoom in
StepRenderer.zoom.in.tooltip = Zoom this step in.
StepRenderer.zoom.in.hideText = true
StepRenderer.zoom.out = Zoom out
StepRenderer.zoom.out.tooltip = Zoom this step out.
StepRenderer.zoom.out.hideText = true 
StepRenderer.fullscreen = Fullscreen
StepRenderer.fullscreen.tooltip = Show only this step (switches to Diagram view).
StepRenderer.fullscreen.hideText = true

exportSuccessful.title = Export has finished
exportSuccessful.message = The export was successful. The origami was exported to {0}.

failedToExport.title = Failed to export origami
failedToExport.message = Failed to export the origami to file {0}.

exportDialog.overwrite = The file {0} exists. Do you want to overwrite it?
exportDialog.overwrite.title = Overwrite file?  

exportDialog.approve = Export
exportDialog.approve.mnemonic = E
exportDialog.approve.tooltip.title = Export
exportDialog.approve.tooltip.message = Export the origami to the selected file.

exportListingSuccessful.title = Export has finished
exportListingSuccessful.message = The export was successful. The listing was exported to {0}.

failedToExportListing.title = Failed to export listing
failedToExportListing.message = Failed to export the listing to file {0}.

exportListing.selectBase = <html>Enter the URL which should be considered as the base for URLs in the listing. <br> \
All URLs in the listing will be relativized using this URL. <br> \
If you want to relativize them against the path you will save the <br> \
listing to, <em><font style="color:green;">press Cancel</font></em> (this is the preferred action).</html>
exportListing.selectBase.title = Select base for URL relativization.

exportListing.selectBase.invalidURI = The address you typed in is invalid. \n \
You must enter a valid URI string (eg. \n \
http://www.example.org/path or file:/C:/Users/Guest/Origami/ ).
exportListing.selectBase.invalidURI.title = Invalid URI entered.

exportListingDialog.overwrite = The file {0} exists. Do you want to overwrite it?
exportListingDialog.overwrite.title = Overwrite file?  

exportListingDialog.approve = Export
exportListingDialog.approve.mnemonic = E
exportListingDialog.approve.tooltip.title = Export
exportListingDialog.approve.tooltip.message = Export the listing to the selected file.

settings.title = Settings
appLocale = Program language
diagramLocale = Language of diagrams